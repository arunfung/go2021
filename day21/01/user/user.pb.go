// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user // import "."

/*
protoc â€“I . --go_out=plugins=grpc:. ./goods.proto
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User_Role_Status int32

const (
	User_Role_OK   User_Role_Status = 0
	User_Role_FAIL User_Role_Status = 1
)

var User_Role_Status_name = map[int32]string{
	0: "OK",
	1: "FAIL",
}
var User_Role_Status_value = map[string]int32{
	"OK":   0,
	"FAIL": 1,
}

func (x User_Role_Status) String() string {
	return proto.EnumName(User_Role_Status_name, int32(x))
}
func (User_Role_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_user_46cb4be8aeae58a0, []int{0, 1, 0}
}

type User struct {
	Id                   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32             `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Role                 *User_Role        `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Dict                 map[string]string `protobuf:"bytes,5,rep,name=dict,proto3" json:"dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_46cb4be8aeae58a0, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *User) GetRole() *User_Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *User) GetDict() map[string]string {
	if m != nil {
		return m.Dict
	}
	return nil
}

type User_Role struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoleName             string           `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Status               User_Role_Status `protobuf:"varint,3,opt,name=status,proto3,enum=user.User_Role_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *User_Role) Reset()         { *m = User_Role{} }
func (m *User_Role) String() string { return proto.CompactTextString(m) }
func (*User_Role) ProtoMessage()    {}
func (*User_Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_46cb4be8aeae58a0, []int{0, 1}
}
func (m *User_Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User_Role.Unmarshal(m, b)
}
func (m *User_Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User_Role.Marshal(b, m, deterministic)
}
func (dst *User_Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User_Role.Merge(dst, src)
}
func (m *User_Role) XXX_Size() int {
	return xxx_messageInfo_User_Role.Size(m)
}
func (m *User_Role) XXX_DiscardUnknown() {
	xxx_messageInfo_User_Role.DiscardUnknown(m)
}

var xxx_messageInfo_User_Role proto.InternalMessageInfo

func (m *User_Role) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User_Role) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *User_Role) GetStatus() User_Role_Status {
	if m != nil {
		return m.Status
	}
	return User_Role_OK
}

type Request struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_46cb4be8aeae58a0, []int{1}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Response struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	User                 *User    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_46cb4be8aeae58a0, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Response) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Response) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterMapType((map[string]string)(nil), "user.User.DictEntry")
	proto.RegisterType((*User_Role)(nil), "user.User.Role")
	proto.RegisterType((*Request)(nil), "user.request")
	proto.RegisterType((*Response)(nil), "user.response")
	proto.RegisterEnum("user.User_Role_Status", User_Role_Status_name, User_Role_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/user.UserService/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Auth(context.Context, *Request) (*Response, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Auth(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _UserService_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_46cb4be8aeae58a0) }

var fileDescriptor_user_46cb4be8aeae58a0 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xc1, 0x4a, 0xe3, 0x50,
	0x14, 0x9d, 0xa4, 0xaf, 0x69, 0x72, 0xc3, 0x74, 0xca, 0xa3, 0xcc, 0x84, 0x0c, 0x0c, 0x21, 0x83,
	0x90, 0x55, 0x16, 0x51, 0x50, 0x74, 0x55, 0x51, 0xa1, 0x28, 0x0a, 0xaf, 0xba, 0x71, 0x53, 0x62,
	0x72, 0xd1, 0xd0, 0x9a, 0xd4, 0x97, 0x97, 0x42, 0x57, 0x7e, 0x9d, 0xff, 0x25, 0xf7, 0x25, 0xd5,
	0xa2, 0xbb, 0x73, 0xce, 0x3d, 0xdc, 0x7b, 0x4e, 0xf2, 0x00, 0x9a, 0x1a, 0x65, 0xbc, 0x92, 0x95,
	0xaa, 0x38, 0x23, 0x1c, 0xbe, 0x99, 0xc0, 0xee, 0x6a, 0x94, 0x7c, 0x08, 0x66, 0x91, 0x7b, 0x46,
	0x60, 0x44, 0x7d, 0x61, 0x16, 0x39, 0xe7, 0xc0, 0xca, 0xf4, 0x19, 0x3d, 0x33, 0x30, 0x22, 0x47,
	0x68, 0xcc, 0x47, 0xd0, 0x4b, 0x1f, 0xd1, 0xeb, 0x69, 0x13, 0x41, 0xfe, 0x1f, 0x98, 0xac, 0x96,
	0xe8, 0xb1, 0xc0, 0x88, 0xdc, 0xe4, 0x57, 0xac, 0xf7, 0xd3, 0xbe, 0x58, 0x54, 0x4b, 0x14, 0x7a,
	0xc8, 0x23, 0x60, 0x79, 0x91, 0x29, 0xaf, 0x1f, 0xf4, 0x22, 0x37, 0x19, 0xef, 0x98, 0xce, 0x8a,
	0x4c, 0x9d, 0x97, 0x4a, 0x6e, 0x84, 0x76, 0xf8, 0x87, 0xe0, 0x7c, 0x48, 0x74, 0x6d, 0x81, 0x1b,
	0x1d, 0xc9, 0x11, 0x04, 0xf9, 0x18, 0xfa, 0xeb, 0x74, 0xd9, 0x6c, 0x43, 0xb5, 0xe4, 0xd8, 0x3c,
	0x32, 0xfc, 0x57, 0x60, 0x74, 0xf0, 0x5b, 0x8b, 0xbf, 0xe0, 0x50, 0x84, 0xf9, 0x4e, 0x15, 0x9b,
	0x84, 0x6b, 0xaa, 0x13, 0x83, 0x55, 0xab, 0x54, 0x35, 0xb5, 0x6e, 0x34, 0x4c, 0x7e, 0x7f, 0x89,
	0x1f, 0xcf, 0xf4, 0x54, 0x74, 0xae, 0xd0, 0x07, 0xab, 0x55, 0xb8, 0x05, 0xe6, 0xcd, 0xe5, 0xe8,
	0x07, 0xb7, 0x81, 0x5d, 0x4c, 0xa6, 0x57, 0x23, 0x23, 0x0c, 0x61, 0x20, 0xf1, 0xa5, 0xc1, 0x5a,
	0xf1, 0x3f, 0x30, 0xa0, 0x3d, 0xf3, 0x2e, 0x88, 0x23, 0x2c, 0xa2, 0xd3, 0x3c, 0xbc, 0x05, 0x5b,
	0x62, 0xbd, 0xaa, 0xca, 0x1a, 0xe9, 0xf3, 0x66, 0x55, 0x8e, 0x9d, 0x43, 0x63, 0xaa, 0xa7, 0xaa,
	0x05, 0x96, 0xdb, 0x7a, 0x9a, 0xf0, 0x7f, 0xa0, 0xff, 0x94, 0xce, 0xe8, 0x26, 0xf0, 0x99, 0x51,
	0x68, 0x3d, 0x39, 0x00, 0x97, 0xd8, 0x0c, 0xe5, 0xba, 0xc8, 0x90, 0xef, 0x01, 0x9b, 0x34, 0xea,
	0x89, 0xff, 0x6c, 0x8d, 0x5d, 0x28, 0x7f, 0xb8, 0xa5, 0xed, 0xfd, 0x53, 0xfb, 0xde, 0x8a, 0x4f,
	0x48, 0x7a, 0xb0, 0xf4, 0x73, 0xd8, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x0f, 0xa2, 0xfa,
	0x1c, 0x02, 0x00, 0x00,
}
